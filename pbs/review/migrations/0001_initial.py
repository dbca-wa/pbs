# Generated by Django 3.2.25 on 2024-08-23 01:35

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('prescription', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnnualIndicativeBurnProgram',
            fields=[
                ('objectid', models.IntegerField(primary_key=True, serialize=False)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('region', models.CharField(blank=True, max_length=35)),
                ('district', models.CharField(blank=True, max_length=35)),
                ('burnid', models.CharField(blank=True, max_length=30)),
                ('fin_yr', models.CharField(blank=True, max_length=9, null=True, verbose_name='Fin Year')),
                ('location', models.CharField(blank=True, max_length=254)),
                ('status', models.CharField(blank=True, max_length=254)),
                ('priority', models.DecimalField(blank=True, decimal_places=0, max_digits=9, null=True)),
                ('treatment', models.DecimalField(blank=True, decimal_places=0, max_digits=9, null=True)),
                ('trtd_area', models.CharField(blank=True, max_length=254)),
                ('area_ha', models.DecimalField(blank=True, decimal_places=11, max_digits=19, null=True)),
                ('perim_km', models.DecimalField(blank=True, decimal_places=11, max_digits=19, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=11, max_digits=19, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=11, max_digits=19, null=True)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExternalAssist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FireTenure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PrescribedBurn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('fire_id', models.CharField(blank=True, max_length=15, null=True, verbose_name='Fire Number')),
                ('fire_name', models.TextField(blank=True, null=True, verbose_name='Name')),
                ('region', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Goldfields'), (2, 'Kimberley'), (3, 'Midwest'), (4, 'Pilbara'), (5, 'South Coast'), (6, 'South West'), (7, 'Swan'), (8, 'Warren'), (9, 'Wheatbelt')], null=True)),
                ('date', models.DateField()),
                ('form_name', models.PositiveSmallIntegerField(choices=[(1, 'Form 268a'), (2, 'Form 268b')], verbose_name='Form Name (268a / 268b)')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No'), (3, 'Monitored')], null=True, verbose_name='Active')),
                ('ignition_status', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Further ignitions required'), (2, 'Ignition now complete')], null=True, verbose_name='Ignition Status')),
                ('planned_area', models.DecimalField(blank=True, decimal_places=1, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name="Today's treatment area (ha)")),
                ('area', models.DecimalField(blank=True, decimal_places=1, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name="Yesterday's treatment area (ha)")),
                ('planned_distance', models.DecimalField(blank=True, decimal_places=1, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name="Today's treatment distance (km)")),
                ('distance', models.DecimalField(blank=True, decimal_places=1, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name="Yesterday's treatment distance (km)")),
                ('tenures', models.TextField(verbose_name='Tenure')),
                ('location', models.TextField(blank=True, null=True, verbose_name='Location')),
                ('est_start', models.TimeField(blank=True, null=True, verbose_name='Estimated Start Time')),
                ('conditions', models.TextField(blank=True, null=True, verbose_name='SDO Special Conditions')),
                ('rolled', models.BooleanField(default=False, editable=False, verbose_name='Fire Rolled from yesterday')),
                ('latitude', models.FloatField(default=0.0)),
                ('longitude', models.FloatField(default=0.0)),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='review_prescribedburn_created', to=settings.AUTH_USER_MODEL)),
                ('district', smart_selects.db_fields.ChainedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='prescription.district')),
                ('external_assist', models.ManyToManyField(blank=True, to='review.ExternalAssist', verbose_name='Assistance received from')),
                ('fire_tenures', models.ManyToManyField(blank=True, to='review.FireTenure', verbose_name='Tenures')),
                ('modifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='review_prescribedburn_modified', to=settings.AUTH_USER_MODEL)),
                ('prescription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prescribed_burn', to='prescription.prescription', verbose_name='Burn ID')),
            ],
            options={
                'verbose_name': 'Prescribed Burn or Bushfire',
                'verbose_name_plural': 'Prescribed Burns and Bushfires',
                'permissions': (('can_endorse', 'Can endorse burns'), ('can_approve', 'Can approve burns')),
                'unique_together': {('prescription', 'date', 'form_name', 'location')},
            },
        ),
        migrations.CreateModel(
            name='BurnState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_type', models.CharField(max_length=64)),
                ('review_date', models.DateTimeField(auto_now_add=True)),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='burnstate', to='prescription.prescription')),
                ('user', models.ForeignKey(help_text='User', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BurnProgramLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('area_ha', models.FloatField()),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('perim_km', models.FloatField()),
                ('trtd_area', models.FloatField()),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='prescription.prescription', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AircraftBurn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('date', models.DateField()),
                ('area', models.DecimalField(blank=True, decimal_places=1, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Area (ha)')),
                ('est_start', models.TimeField(blank=True, null=True, verbose_name='Estimated Start Time')),
                ('bombing_duration', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Bombing Duration (hrs)')),
                ('min_smc', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Min SMC')),
                ('max_fdi', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Max FDI')),
                ('sdi_per_day', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='SDI Each Day')),
                ('flight_seq', models.TextField(blank=True, null=True, verbose_name='Flight Sequence')),
                ('aircraft_rego', models.TextField(blank=True, null=True, verbose_name='Aircraft Rego')),
                ('arrival_time', models.TimeField(blank=True, null=True, verbose_name='Arrival Time Over Burn')),
                ('program', models.TextField(blank=True, null=True, verbose_name='Program')),
                ('aircrew', models.TextField(blank=True, null=True, verbose_name='Aircrew')),
                ('rolled', models.BooleanField(default=False, editable=False, verbose_name='Fire Rolled from yesterday')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='review_aircraftburn_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='review_aircraftburn_modified', to=settings.AUTH_USER_MODEL)),
                ('prescription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='aircraft_burns', to='prescription.prescription', verbose_name='Burn ID')),
            ],
            options={
                'verbose_name': 'Aircraft Burn',
                'verbose_name_plural': 'Aircraft Burns',
                'permissions': (('can_endorse', 'Can endorse burns'), ('can_approve', 'Can approve burns')),
                'unique_together': {('prescription', 'date')},
            },
        ),
        migrations.CreateModel(
            name='AircraftApproval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_type', models.CharField(blank=True, max_length=64, null=True)),
                ('approval_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('aircraft_burn', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='approvals', to='review.aircraftburn')),
                ('user', models.ForeignKey(blank=True, help_text='User', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Acknowledgement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acknow_type', models.CharField(blank=True, max_length=64, null=True)),
                ('acknow_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('burn', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='acknowledgements', to='review.prescribedburn')),
                ('user', models.ForeignKey(blank=True, help_text='User', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]

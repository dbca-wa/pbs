# Generated by Django 3.2.25 on 2024-08-23 01:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('prescription', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('relevant', models.BooleanField(default=True, help_text='Include in Action List', verbose_name='Action Relevant?')),
                ('pre_burn', models.BooleanField(default=False)),
                ('details', models.TextField(blank=True, verbose_name='Action Details')),
                ('pre_burn_resolved', models.CharField(blank=True, choices=[('No', 'No'), ('Yes', 'Yes, as planned'), ('Explanation', 'Yes, with explanation')], default='No', max_length=200, verbose_name='Issue Resolved')),
                ('pre_burn_completer', models.TextField(blank=True, null=True, verbose_name='Actioned By Whom')),
                ('pre_burn_completed', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Date Actioned')),
                ('pre_burn_explanation', models.TextField(blank=True, verbose_name='Explanation')),
                ('day_of_burn', models.BooleanField(default=False)),
                ('day_of_burn_responsible', models.CharField(choices=[('IC', 'IC'), ('OPS', 'OPS')], default='IC', max_length=200, verbose_name='Responsible')),
                ('day_of_burn_completer', models.TextField(blank=True, null=True, verbose_name='Actioned By Whom')),
                ('day_of_burn_completed', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Date Actioned')),
                ('day_of_burn_include', models.BooleanField(default=False, verbose_name='Include in Briefing?')),
                ('day_of_burn_situation', models.BooleanField(default=False, verbose_name='S')),
                ('day_of_burn_mission', models.BooleanField(default=False, verbose_name='M')),
                ('day_of_burn_execution', models.BooleanField(default=False, verbose_name='E')),
                ('day_of_burn_administration', models.BooleanField(default=False, verbose_name='A')),
                ('day_of_burn_command', models.BooleanField(default=False, verbose_name='C')),
                ('day_of_burn_safety', models.BooleanField(default=False, verbose_name='S')),
                ('post_burn', models.BooleanField(default=False)),
                ('post_burn_completer', models.TextField(blank=True, null=True, verbose_name='Actioned By Whom')),
                ('post_burn_completed', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Date Actioned')),
                ('context_statement', models.BooleanField(default=False, verbose_name='Relevant to Context Statement?')),
                ('index', models.PositiveSmallIntegerField(default=1, editable=False, help_text='Index of this action in the set of actions for this risk', verbose_name='Index of this action')),
                ('total', models.PositiveSmallIntegerField(default=1, editable=False, verbose_name='Total number of actions for this risk')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_action_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_action_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['risk__category', '-relevant', 'risk__name', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='Contingency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(help_text='Contingency Details', verbose_name='Contingency')),
                ('trigger', models.TextField(help_text='Trigger')),
                ('actions_migrated', models.BooleanField(default=True)),
                ('action', models.TextField(blank=True, help_text='List of Actions', null=True)),
                ('notifications_migrated', models.BooleanField(default=True)),
                ('notify_name', models.TextField(blank=True, null=True, verbose_name='Notify (Name)')),
                ('location', models.TextField(blank=True, null=True)),
                ('organisation', models.TextField(blank=True, null=True)),
                ('contact_number', models.TextField(blank=True, null=True)),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_contingency_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_contingency_modified', to=settings.AUTH_USER_MODEL)),
                ('prescription', models.ForeignKey(help_text='Prescription this objective belongs to.', on_delete=django.db.models.deletion.PROTECT, to='prescription.prescription')),
            ],
            options={
                'verbose_name': 'Contingency',
                'verbose_name_plural': 'Contingencies',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, verbose_name='Risk Description')),
                ('draft_consequence', models.PositiveSmallIntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6')], default=6, verbose_name='Consequence')),
                ('draft_likelihood', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Rare'), (2, 'Unlikely'), (3, 'Possible'), (4, 'Likely'), (5, 'Almost Certain')], default=5, verbose_name='Likelihood')),
                ('draft_risk_level', models.PositiveSmallIntegerField(choices=[(1, 'Very Low'), (2, 'Low'), (3, 'Medium'), (4, 'High'), (5, 'Very High')], default=5, editable=False, verbose_name='Draft ePFP Risk Level')),
                ('alarp', models.BooleanField(default=False, verbose_name='As Low As Reasonably Practicable?')),
                ('final_consequence', models.PositiveSmallIntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6')], default=3, verbose_name='Revised Consequence')),
                ('final_likelihood', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Rare'), (2, 'Unlikely'), (3, 'Possible'), (4, 'Likely'), (5, 'Almost Certain')], default=5, verbose_name='Revised Likelihood')),
                ('final_risk_level', models.PositiveSmallIntegerField(choices=[(1, 'Very Low'), (2, 'Low'), (3, 'Medium'), (4, 'High'), (5, 'Very High')], default=5, editable=False, verbose_name='Final ePFP Risk Level')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_register_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_register_modified', to=settings.AUTH_USER_MODEL)),
                ('prescription', models.ForeignKey(help_text='Prescription this risk register item belongs to.', on_delete=django.db.models.deletion.PROTECT, to='prescription.prescription')),
            ],
            options={
                'verbose_name': 'Risk Register Item',
                'verbose_name_plural': 'Risk Register Items',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='RiskCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Potential Source of Risk Category')),
            ],
            options={
                'verbose_name': 'Potential Source of Risk Category',
                'verbose_name_plural': 'Potential Source of Risk Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('description', models.TextField()),
                ('complete', models.BooleanField(default=False, verbose_name='Dealt With?')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_treatment_created', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='risk.treatmentlocation')),
                ('modifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_treatment_modified', to=settings.AUTH_USER_MODEL)),
                ('register', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='risk.register')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Potential Source of Risk')),
                ('risk', models.PositiveSmallIntegerField(choices=[(1, 'Unassessed'), (2, 'Uncertainty'), (3, 'Assumption'), (4, 'Not Applicable')], default=1)),
                ('custom', models.BooleanField(default=True, help_text='Is this a non standard source of risk?', verbose_name='Non standard source of risk')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='risk.riskcategory')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_risk_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_risk_modified', to=settings.AUTH_USER_MODEL)),
                ('prescription', models.ForeignKey(blank=True, help_text='Prescription this issue belongs to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='prescription.prescription')),
            ],
            options={
                'verbose_name': 'Potential Sources of Risk',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ContingencyNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Notify (Name)')),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('organisation', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=100, null=True)),
                ('contingency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notifications', to='risk.contingency')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_contingencynotification_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_contingencynotification_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ContingencyAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('action', models.TextField(blank=True, null=True)),
                ('contingency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='actions', to='risk.contingency')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_contingencyaction_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_contingencyaction_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContextRelevantAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('considered', models.BooleanField(default=False, help_text='Has this action been considered as part of writing the context statement?', verbose_name='Considered?')),
                ('action', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='context_considered', to='risk.action', verbose_name='Action relevant for context statement')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_contextrelevantaction_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_contextrelevantaction_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Context',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('statement', models.TextField(blank=True, verbose_name='Context Statement')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_context_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_context_modified', to=settings.AUTH_USER_MODEL)),
                ('prescription', models.ForeignKey(help_text='Prescription this issue belongs to.', on_delete=django.db.models.deletion.PROTECT, to='prescription.prescription')),
            ],
            options={
                'verbose_name': 'Context Statement Item',
                'verbose_name_plural': 'Context Statement Items',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Complexity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('factor', models.CharField(max_length=64)),
                ('sub_factor', models.CharField(max_length=64, verbose_name='Sub-factor')),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('rating', models.PositiveSmallIntegerField(choices=[(0, 'Unrated'), (2, 'Low'), (3, 'Medium'), (4, 'High')], default=0, verbose_name='Complexity Rating')),
                ('rationale', models.TextField(blank=True, verbose_name='Complexity Rationale')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_complexity_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='risk_complexity_modified', to=settings.AUTH_USER_MODEL)),
                ('prescription', models.ForeignKey(blank=True, help_text='Prescription this Complexity belongs to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='prescription.prescription')),
            ],
            options={
                'verbose_name': 'Complexity Analysis Item',
                'verbose_name_plural': 'Complexity Analysis Items',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='action',
            name='risk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='risk.risk', verbose_name='Potential Source of Risk'),
        ),
    ]
